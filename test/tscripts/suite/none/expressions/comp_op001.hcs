// none/expressions/comp_op001.hcs  Test Comparison Operators and Records types

scheme J { name "Test Julian"; base julian; grammar { optional wday; } }
scheme G { name "Test Gregorian"; base gregorian; grammar { optional wday; } }

set inout G:def;

let rJ = {"J",1710,2,23};
let r1 = record 2345678;
let r1a = {"G",1710,2,23};
let r1b = {"G",1710,2,23,?};
let r2 = {"G",1710,2,24};

writeln "";
writeln rJ + " = " + r1a + " is " + (rJ = r1a);
writeln r1 + " = " + r1a + " is " + (r1 = r1a);
writeln r1 + " = " + r1b + " is " + (r1 = r1b);
writeln r1 = r2;
writeln (r1b = r1a) + ", " + (r1a = r1b);
writeln r1 <> r2;
writeln r1 < r2;
writeln r1 >= r2;
writeln {G,1710,*,23,*} = {G,1710,?,23};

/*[OUTPUT]

{"J", 1710, 2, 23} = {"G", 1710, 2, 23} is false
{"G", 1710, 2, 23, ?} = {"G", 1710, 2, 23} is true
{"G", 1710, 2, 23, ?} = {"G", 1710, 2, 23, ?} is true
false
true, true
true
Error (21): Can only compare a Record for equal or not equal.
Error (22): Can only compare a Record for equal or not equal.
true

[OUTPUT]*/
