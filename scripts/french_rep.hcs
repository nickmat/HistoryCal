/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * Name:        scripts/french_rep.hcs
 * Project:     Cal: Programmable Historical Calendar library.
 * Purpose:     Default script for French Republican calendar.
 * Author:      Nick Matthews
 * Website:     http://historycal.org
 * Created:     30th September 2014
 * Copyright:   Copyright (c) 2014 ~ 2017, Nick Matthews.
 * Licence:     GNU GPLv3
 *
 *  The Cal library is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  The Cal library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with the Cal library.  If not, see <http://www.gnu.org/licenses/>.
 *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*/

vocab frm {
    name "Month names";
    fieldname month;
    lang en;
    pseudo    Month,  Mon;
    tokens {
        1, "Vendémiaire",      "Vend";
        2, "Brumaire",         "Brum";
        3, "Frimaire",         "Frim";
        4, "Nivôse",           "Nivo";
        5, "Pluviôse",         "Pluv";
        6, "Ventôse",          "Vent";
        7, "Germinal",         "Germ";
        8, "Floréal",          "Flor";
        9, "Prairial",         "Prai";
        10, "Messidor",        "Mess";
        11, "Thermidor",       "Ther";
        12, "Fructidor",       "Fruc";
        13, "Complémentaires", "Comp";
    }
}

vocab frdd {
    name "Decade Day";
    fieldname dday;
    lang en;
    pseudo    DecDay,  DDay;
    tokens {
        1, "Primidi",  "Prim";
        2, "Duodi",    "Duo";
        3, "Tridi",    "Tri";
        4, "Quartidi", "Quar";
        5, "Quintidi", "Quin";
        6, "Sextidi",  "Sext";
        7, "Septidi",  "Sept";
        8, "Octidi",   "Oct";
        9, "Nonidi",   "Non";
        10, "Décadi",  "Dec";
    }
}

vocab frcomp {
    name "Complementary Days";
    fieldname cday;
    lang en;
    pseudo    CompDay,           CDay;
    tokens {
        1, "Fête de la Vertu",      "Ver";
        2, "Fête du Génie",         "Gen";
        3, "Fête du Travail",       "Trav";
        4, "Fête de l'Opinion",     "Opin";
        5, "Fête des Récompenses",  "Rec";
        6, "Fête de la Révolution", "Rev";
    }
}

grammar fr {
    optional nmonth, nmday, cday, dday, wday;
    vocabs frm, frcomp, frdd, w;
    alias field {
        Day,     day;
        Month,   month;
        Year,    year;
        DecDay,  dday;
        WDay,    wday;
        NMonth,  nmonth;
        NMDay,   nmday;
        CompDay, cday;
    }
    alias pseudo {
        dd,   Day;
        mm,   Month;
        yyyy, Year;
        mm,   NMonth;
        dd,   NMDay;
        w,    WDay;
        d,    DecDay;
        c,    CompDay;
    }
    alias unit {
        d,   day;
        dec, decade;
        w,   week;
        m,   month;
        y,   year;
    }
    format dmy,    "(Day) |(Month:frm.a) |(Year)";
    format "dmy+", "(Day) |(Month:frm) |(Year)";
    format ymd,    "(Year)|,(Month:frm.a)|,(Day)";
    format cdmy {
        input "(Day) |(Month) |(Year)";
        output "(CompDay:frcomp) |(NMDay) |(NMonth:frm) |(Year)";
        rankout year, nmonth, nmday, cday;
    }
    format out {
        input "(Day) |(Month) |(Year)";
        output "(CompDay:frcomp) |(NMDay) |(NMonth:frm) |an (Year:!rn)";
        rankout year, nmonth, nmday, cday;
    }
    format dcdmy {
        input "(Day) |(Month) |(Year)";
        output "(DecDay:frdd) |(CompDay:frcomp) |(NMDay) |(NMonth:frm) |(Year)";
        rankout year, nmonth, nmday, cday, dday;
    }
    format wcdmy {
        input "(Day) |(Month) |(Year)";
        output "(WDay:w), |(CompDay:frcomp) |(NMDay) |(NMonth:frm) |(Year)";
        rankout year, nmonth, nmday, cday, wday;
    }
    format "cdmy-" {
        input "(Day) |(Month) |(Year)";
        output "(CompDay:frcomp.a) |(NMDay) |(NMonth:frm.a) |(Year)";
        rankout year, nmonth, nmday, cday;
    }
    format "dcdmy-" {
        input "(Day) |(Month) |(Year)";
        output "(DecDay:frdd.a) |(CompDay:frcomp.a) |(NMDay) |(NMonth:frm.a) |(Year)";
        rankout year, nmonth, nmday, cday, dday;
    }
    format "wcdmy-" {
        input "(Day) |(Month) |(Year)";
        output "(WDay:w.a), |(CompDay:frcomp.a) |(NMDay) |(NMonth:frm.a) |(Year)";
        rankout year, nmonth, nmday, cday, wday;
    }
    pref cdmy;
}

scheme fr {
    name "French Republic";
    base french;
    grammar fr;
}

// End of scripts/french_rep.hcs file
