/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * Name:        scripts/caldefscripts.f2c
 * Project:     Cal: Programmable Historical Calendar library.
 * Purpose:     file2cpp template file for default scripts.
 * Author:      Nick Matthews
 * Website:     http://historycal.org
 * Created:     30th September 2014
 * Copyright:   Copyright (c) 2014 ~ 2018, Nick Matthews.
 * Licence:     GNU GPLv3
 *
 *  The Cal library is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  The Cal library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with the Cal library.  If not, see <http://www.gnu.org/licenses/>.
 *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

 This template is used to create the src/cal/caldefscripts.cpp file.

*/

#include "caldefscripts.h"

Cal::ScriptModule Cal::cal_default_scripts[] = {
    { "stdlib", @(cp.cpp)"stdlib.hcs" },
    { "base", @(cp.cpp)"base.hcs" },
    { "jdn", @(cp.cpp)"jdn.hcs" },
    { "julian", @(cp.cpp)"julian.hcs" },
    { "julian_hybrid", @(cp.cpp)"julian_hybrid.hcs" },
    { "liturgical", @(cp.cpp)"liturgical.hcs" },
    { "ce_bce", @(cp.cpp)"ce-bce.hcs" },
    { "english_reg", @(cp.cpp)"english_reg.hcs" },
    { "scottish_reg", @(cp.cpp)"scottish_reg.hcs" },
    { "iso", @(cp.cpp)"iso.hcs" },
    { "french_rep", @(cpo.cpp)"french_rep.hcs" },
    { "hebrew", @(cpo.cpp)"hebrew.hcs" },
    { "islamic", @(cpo.cpp)"islamic.hcs" },
    { "chinese", @(cpo.cpp)"chinese.hcs" },
};

size_t Cal::cal_default_scripts_size = sizeof(Cal::cal_default_scripts) / sizeof(Cal::ScriptModule);

// End of scripts/caldefscripts.f2c file
