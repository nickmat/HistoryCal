# =========================================================================
#     This makefile was generated by
#     Bakefile 0.2.9 (http://www.bakefile.org)
#     Do not modify, all changes will be overwritten!
# =========================================================================



# -------------------------------------------------------------------------
# These are configurable options:
# -------------------------------------------------------------------------

# Compiler flags to link shared library 
LINK_DLL_FLAGS ?= -shared

# C compiler 
CC = gcc

# C++ compiler 
CXX = `$(WX_CONFIG) --cxx`

# Standard flags for CC 
CFLAGS ?= 

# Standard flags for C++ 
CXXFLAGS ?= 

# Standard preprocessor flags (common for CC and CXX) 
CPPFLAGS ?= 

# Standard linker flags 
LDFLAGS ?= 

# Use debug build of wxWidgets (linked with debug CRT)? [0,1]
WX_DEBUG ?= 1

# Location and arguments of wx-config script 
WX_CONFIG ?= wx-config

# Port of the wx library to build against [gtk1,gtk2,msw,x11,motif,osx_cocoa,osx_carbon,dfb]
WX_PORT ?= $(shell $(WX_CONFIG) --query-toolkit)

# Use DLL build of wx library to use? [0,1]
WX_SHARED ?= $(shell if test -z `$(WX_CONFIG) --query-linkage`; then echo 1; else echo 0; fi)

# Compile Unicode build of wxWidgets? [0,1]
WX_UNICODE ?= $(shell $(WX_CONFIG) --query-chartype | sed 's/unicode/1/;s/ansi/0/')

# Version of the wx library to build against. 
WX_VERSION ?= $(shell $(WX_CONFIG) --query-version | sed -e 's/\([0-9]*\)\.\([0-9]*\)/\1\2/')



# -------------------------------------------------------------------------
# Do not modify the rest of this file!
# -------------------------------------------------------------------------

### Variables: ###

CPPDEPS = -MT$@ -MF`echo $@ | sed -e 's,\.o$$,.d,'` -MD -MP
WX_VERSION_MAJOR = $(shell echo $(WX_VERSION) | cut -c1,1)
WX_VERSION_MINOR = $(shell echo $(WX_VERSION) | cut -c2,2)
WX_CONFIG_FLAGS = $(WX_CONFIG_UNICODE_FLAG) $(WX_CONFIG_SHARED_FLAG) \
	--toolkit=$(WX_PORT) --version=$(WX_VERSION_MAJOR).$(WX_VERSION_MINOR)
HCAL_CXXFLAGS = $(VAR) $(VAR_7) -I../../include -I../../src `$(WX_CONFIG) \
	--cxxflags $(WX_CONFIG_FLAGS)` $(CPPFLAGS) $(CXXFLAGS)
HCAL_OBJECTS =  \
	hcal_hcapp.o \
	hcal_hcfbframe.o \
	hcal_hcframe.o \
	hcal_hcversion.o \
	hcal_dummy.o
TESTS_CXXFLAGS = $(VAR) $(VAR_7) -I../../include -I$(CPPUNIT)/include \
	$(CPPFLAGS) $(CXXFLAGS)
TESTS_OBJECTS =  \
	tests_def_eng.o \
	tests_def_g.o \
	tests_def_j325.o \
	tests_testcal.o \
	tests_testcommon.o \
	tests_testera.o \
	tests_testgrammar.o \
	tests_testgregorian.o \
	tests_testhybrid.o \
	tests_testj325.o \
	tests_testjulian.o \
	tests_testmain.o \
	tests_testvocab.o
UNIT_CXXFLAGS = $(VAR) $(VAR_7) -I../../include -I$(CPPUNIT)/include $(CPPFLAGS) \
	$(CXXFLAGS)
UNIT_OBJECTS =  \
	unit_def_eng.o \
	unit_def_g.o \
	unit_def_j325.o \
	unit_testcal.o \
	unit_testcommon.o \
	unit_testera.o \
	unit_testgrammar.o \
	unit_testgregorian.o \
	unit_testhybrid.o \
	unit_testj325.o \
	unit_testjulian.o \
	unit_testmain.o \
	unit_testvocab.o
CAL_CXXFLAGS = $(VAR) $(VAR_7) -DMAKINGLIB_CAL -I../../include -fPIC -DPIC \
	$(CPPFLAGS) $(CXXFLAGS)
CAL_OBJECTS =  \
	cal_calbase.o \
	cal_calcalendars.o \
	cal_calera.o \
	cal_calformat.o \
	cal_calgrammar.o \
	cal_calgregorian.o \
	cal_calhybrid.o \
	cal_caljdn.o \
	cal_caljulian.o \
	cal_calmath.o \
	cal_calparse.o \
	cal_calrecord.o \
	cal_calscheme.o \
	cal_calschemes.o \
	cal_calscripts.o \
	cal_calshift.o \
	cal_calversion.o \
	cal_calvocab.o
UTF8API_CFLAGS = $(VAR) $(VAR_7) -DMAKINGLIB_UTF8API -I../../include -fPIC -DPIC \
	$(CPPFLAGS) $(CFLAGS)
UTF8API_CXXFLAGS = $(VAR) $(VAR_7) -DMAKINGLIB_UTF8API -I../../include -fPIC \
	-DPIC $(CPPFLAGS) $(CXXFLAGS)
UTF8API_OBJECTS =  \
	utf8api_utf8proc.o \
	utf8api_utf8api.o

### Conditionally set variables: ###

ifeq ($(WX_UNICODE),0)
WX_CONFIG_UNICODE_FLAG = --unicode=no
endif
ifeq ($(WX_UNICODE),1)
WX_CONFIG_UNICODE_FLAG = --unicode=yes
endif
ifeq ($(WX_SHARED),0)
WX_CONFIG_SHARED_FLAG = --static=yes
endif
ifeq ($(WX_SHARED),1)
WX_CONFIG_SHARED_FLAG = --static=no
endif
ifeq ($(WX_DEBUG),0)
____WX_DEBUG = -lcppunit
endif
ifeq ($(WX_DEBUG),1)
____WX_DEBUG = -lcppunitd
endif
ifeq ($(WX_DEBUG),0)
VAR = -O2
endif
ifeq ($(WX_DEBUG),1)
VAR = -O0
endif
ifeq ($(WX_DEBUG),0)
VAR_7 = 
endif
ifeq ($(WX_DEBUG),1)
VAR_7 = -g
endif


### Targets: ###

all: test_for_selected_wxbuild hcal tests unit libcal.so libutf8api.so

install: 

uninstall: 

clean: 
	rm -f ./*.o
	rm -f ./*.d
	rm -f hcal
	rm -f tests
	rm -f unit
	rm -f libcal.so
	rm -f libcal.so
	rm -f libutf8api.so
	rm -f libutf8api.so

test_for_selected_wxbuild: 
	@$(WX_CONFIG) $(WX_CONFIG_FLAGS)

hcal: $(HCAL_OBJECTS) libcal.so libutf8api.so
	$(CXX) -o $@ $(HCAL_OBJECTS)  $(VAR_7)  $(LDFLAGS)  libcal.so libutf8api.so `$(WX_CONFIG) $(WX_CONFIG_FLAGS) --libs core,base`

tests: $(TESTS_OBJECTS) libcal.so libutf8api.so
	$(CXX) -o $@ $(TESTS_OBJECTS)  $(VAR_7)  -L$(CPPUNIT)/lib $(LDFLAGS)  libcal.so libutf8api.so $(____WX_DEBUG)

unit: $(UNIT_OBJECTS) libcal.so libutf8api.so
	$(CXX) -o $@ $(UNIT_OBJECTS)  $(VAR_7)  -L$(CPPUNIT)/lib $(LDFLAGS)  libcal.so libutf8api.so $(____WX_DEBUG)

libcal.so: $(CAL_OBJECTS) libutf8api.so
	$(CXX) $(LINK_DLL_FLAGS) -fPIC -o $@ $(CAL_OBJECTS)  $(VAR_7) $(LDFLAGS)  libutf8api.so

libutf8api.so: $(UTF8API_OBJECTS)
	$(CXX) $(LINK_DLL_FLAGS) -fPIC -o $@ $(UTF8API_OBJECTS)  $(VAR_7) $(LDFLAGS)

hcal_hcapp.o: ./../../src/hcal/hcapp.cpp
	$(CXX) -c -o $@ $(HCAL_CXXFLAGS) $(CPPDEPS) $<

hcal_hcfbframe.o: ./../../src/hcal/hcfbframe.cpp
	$(CXX) -c -o $@ $(HCAL_CXXFLAGS) $(CPPDEPS) $<

hcal_hcframe.o: ./../../src/hcal/hcframe.cpp
	$(CXX) -c -o $@ $(HCAL_CXXFLAGS) $(CPPDEPS) $<

hcal_hcversion.o: ./../../src/hcal/hcversion.cpp
	$(CXX) -c -o $@ $(HCAL_CXXFLAGS) $(CPPDEPS) $<

hcal_dummy.o: ./../../src/dummy.cpp
	$(CXX) -c -o $@ $(HCAL_CXXFLAGS) $(CPPDEPS) $<

tests_def_eng.o: ./../../src/test/def_eng.cpp
	$(CXX) -c -o $@ $(TESTS_CXXFLAGS) $(CPPDEPS) $<

tests_def_g.o: ./../../src/test/def_g.cpp
	$(CXX) -c -o $@ $(TESTS_CXXFLAGS) $(CPPDEPS) $<

tests_def_j325.o: ./../../src/test/def_j325.cpp
	$(CXX) -c -o $@ $(TESTS_CXXFLAGS) $(CPPDEPS) $<

tests_testcal.o: ./../../src/test/testcal.cpp
	$(CXX) -c -o $@ $(TESTS_CXXFLAGS) $(CPPDEPS) $<

tests_testcommon.o: ./../../src/test/testcommon.cpp
	$(CXX) -c -o $@ $(TESTS_CXXFLAGS) $(CPPDEPS) $<

tests_testera.o: ./../../src/test/testera.cpp
	$(CXX) -c -o $@ $(TESTS_CXXFLAGS) $(CPPDEPS) $<

tests_testgrammar.o: ./../../src/test/testgrammar.cpp
	$(CXX) -c -o $@ $(TESTS_CXXFLAGS) $(CPPDEPS) $<

tests_testgregorian.o: ./../../src/test/testgregorian.cpp
	$(CXX) -c -o $@ $(TESTS_CXXFLAGS) $(CPPDEPS) $<

tests_testhybrid.o: ./../../src/test/testhybrid.cpp
	$(CXX) -c -o $@ $(TESTS_CXXFLAGS) $(CPPDEPS) $<

tests_testj325.o: ./../../src/test/testj325.cpp
	$(CXX) -c -o $@ $(TESTS_CXXFLAGS) $(CPPDEPS) $<

tests_testjulian.o: ./../../src/test/testjulian.cpp
	$(CXX) -c -o $@ $(TESTS_CXXFLAGS) $(CPPDEPS) $<

tests_testmain.o: ./../../src/test/testmain.cpp
	$(CXX) -c -o $@ $(TESTS_CXXFLAGS) $(CPPDEPS) $<

tests_testvocab.o: ./../../src/test/testvocab.cpp
	$(CXX) -c -o $@ $(TESTS_CXXFLAGS) $(CPPDEPS) $<

unit_def_eng.o: ./../../test/unit/def_eng.cpp
	$(CXX) -c -o $@ $(UNIT_CXXFLAGS) $(CPPDEPS) $<

unit_def_g.o: ./../../test/unit/def_g.cpp
	$(CXX) -c -o $@ $(UNIT_CXXFLAGS) $(CPPDEPS) $<

unit_def_j325.o: ./../../test/unit/def_j325.cpp
	$(CXX) -c -o $@ $(UNIT_CXXFLAGS) $(CPPDEPS) $<

unit_testcal.o: ./../../test/unit/testcal.cpp
	$(CXX) -c -o $@ $(UNIT_CXXFLAGS) $(CPPDEPS) $<

unit_testcommon.o: ./../../test/unit/testcommon.cpp
	$(CXX) -c -o $@ $(UNIT_CXXFLAGS) $(CPPDEPS) $<

unit_testera.o: ./../../test/unit/testera.cpp
	$(CXX) -c -o $@ $(UNIT_CXXFLAGS) $(CPPDEPS) $<

unit_testgrammar.o: ./../../test/unit/testgrammar.cpp
	$(CXX) -c -o $@ $(UNIT_CXXFLAGS) $(CPPDEPS) $<

unit_testgregorian.o: ./../../test/unit/testgregorian.cpp
	$(CXX) -c -o $@ $(UNIT_CXXFLAGS) $(CPPDEPS) $<

unit_testhybrid.o: ./../../test/unit/testhybrid.cpp
	$(CXX) -c -o $@ $(UNIT_CXXFLAGS) $(CPPDEPS) $<

unit_testj325.o: ./../../test/unit/testj325.cpp
	$(CXX) -c -o $@ $(UNIT_CXXFLAGS) $(CPPDEPS) $<

unit_testjulian.o: ./../../test/unit/testjulian.cpp
	$(CXX) -c -o $@ $(UNIT_CXXFLAGS) $(CPPDEPS) $<

unit_testmain.o: ./../../test/unit/testmain.cpp
	$(CXX) -c -o $@ $(UNIT_CXXFLAGS) $(CPPDEPS) $<

unit_testvocab.o: ./../../test/unit/testvocab.cpp
	$(CXX) -c -o $@ $(UNIT_CXXFLAGS) $(CPPDEPS) $<

cal_calbase.o: ./../../src/cal/calbase.cpp
	$(CXX) -c -o $@ $(CAL_CXXFLAGS) $(CPPDEPS) $<

cal_calcalendars.o: ./../../src/cal/calcalendars.cpp
	$(CXX) -c -o $@ $(CAL_CXXFLAGS) $(CPPDEPS) $<

cal_calera.o: ./../../src/cal/calera.cpp
	$(CXX) -c -o $@ $(CAL_CXXFLAGS) $(CPPDEPS) $<

cal_calformat.o: ./../../src/cal/calformat.cpp
	$(CXX) -c -o $@ $(CAL_CXXFLAGS) $(CPPDEPS) $<

cal_calgrammar.o: ./../../src/cal/calgrammar.cpp
	$(CXX) -c -o $@ $(CAL_CXXFLAGS) $(CPPDEPS) $<

cal_calgregorian.o: ./../../src/cal/calgregorian.cpp
	$(CXX) -c -o $@ $(CAL_CXXFLAGS) $(CPPDEPS) $<

cal_calhybrid.o: ./../../src/cal/calhybrid.cpp
	$(CXX) -c -o $@ $(CAL_CXXFLAGS) $(CPPDEPS) $<

cal_caljdn.o: ./../../src/cal/caljdn.cpp
	$(CXX) -c -o $@ $(CAL_CXXFLAGS) $(CPPDEPS) $<

cal_caljulian.o: ./../../src/cal/caljulian.cpp
	$(CXX) -c -o $@ $(CAL_CXXFLAGS) $(CPPDEPS) $<

cal_calmath.o: ./../../src/cal/calmath.cpp
	$(CXX) -c -o $@ $(CAL_CXXFLAGS) $(CPPDEPS) $<

cal_calparse.o: ./../../src/cal/calparse.cpp
	$(CXX) -c -o $@ $(CAL_CXXFLAGS) $(CPPDEPS) $<

cal_calrecord.o: ./../../src/cal/calrecord.cpp
	$(CXX) -c -o $@ $(CAL_CXXFLAGS) $(CPPDEPS) $<

cal_calscheme.o: ./../../src/cal/calscheme.cpp
	$(CXX) -c -o $@ $(CAL_CXXFLAGS) $(CPPDEPS) $<

cal_calschemes.o: ./../../src/cal/calschemes.cpp
	$(CXX) -c -o $@ $(CAL_CXXFLAGS) $(CPPDEPS) $<

cal_calscripts.o: ./../../src/cal/calscripts.cpp
	$(CXX) -c -o $@ $(CAL_CXXFLAGS) $(CPPDEPS) $<

cal_calshift.o: ./../../src/cal/calshift.cpp
	$(CXX) -c -o $@ $(CAL_CXXFLAGS) $(CPPDEPS) $<

cal_calversion.o: ./../../src/cal/calversion.cpp
	$(CXX) -c -o $@ $(CAL_CXXFLAGS) $(CPPDEPS) $<

cal_calvocab.o: ./../../src/cal/calvocab.cpp
	$(CXX) -c -o $@ $(CAL_CXXFLAGS) $(CPPDEPS) $<

utf8api_utf8proc.o: ./../../src/utf8/utf8proc.c
	$(CC) -c -o $@ $(UTF8API_CFLAGS) $(CPPDEPS) $<

utf8api_utf8api.o: ./../../src/utf8/utf8api.cpp
	$(CXX) -c -o $@ $(UTF8API_CXXFLAGS) $(CPPDEPS) $<

.PHONY: all install uninstall clean


# Dependencies tracking:
-include ./*.d
